#! /usr/bin/env python
#
# Support module generated by PAGE version 4.5
# In conjunction with Tcl version 8.6
# Apr 20, 2015 07:13:00 PM


from tkinter import messagebox, END
import os
from urllib.error import *

from eve.account import EveLoginManager, EveAccount
from gui.newaccountdialog import AccountDialog


def gui_edit():
    items = map(int, w.acc_list.curselection())
    for idx in items:
        account = login_manager.accounts[w.acc_list.get(idx)]
        dialog = AccountDialog(root, "Edit account", account.login_name,
                               account.plain_password(login_manager.coder),
                               account.eve_path, account.direct_x)
        if dialog.result is not None:
            path = dialog.result[2]
            if not path.endswith(os.sep):
                path = path + os.sep
            account = EveAccount(dialog.result[0], dialog.result[1], login_manager.coder, path,
                                 None, None, dialog.result[3])
            login_manager.add_account(account)


def gui_login():
    items = map(int, w.acc_list.curselection())
    for idx in items:
        try:
            login_manager.login(w.acc_list.get(idx))
        except URLError as e:
            messagebox.showerror("Error", e.msg)


def gui_add():
    dialog = AccountDialog(root, "New Account")
    if dialog.result is not None:
        path = dialog.result[2]
        if not path.endswith(os.sep):
            path = path + os.sep
        account = EveAccount(dialog.result[0], dialog.result[1], login_manager.coder, path,
                             None, None, dialog.result[3])
        login_manager.add_account(account)
        w.acc_list.insert(END, account.login_name)


def gui_delete():
    items = map(int, w.acc_list.curselection())
    for idx in items:
        login_manager.del_account(w.acc_list.get(idx))

    items = map(int, w.acc_list.curselection())
    for idx in items:
        w.acc_list.delete(idx)


def gui_clear_cache():
    login_manager.clear_cache()


def init(top, gui, crypter):
    global w, top_level, root, login_manager
    w = gui
    top_level = top
    root = top
    login_manager = EveLoginManager(crypter)
    login_manager.load()
    for account_name in login_manager.accounts:
        gui.acc_list.insert(END, account_name)


def close():
    login_manager.save()


def destroy_window():
    print("destroy_window")
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None


